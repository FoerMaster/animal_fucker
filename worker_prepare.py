import cv2
import numpy as np
import random
import string
import os

def save_video_drafts(v_class, file):
    vidcap = cv2.VideoCapture(file)
    success, image = vidcap.read()
    count = 0
    capt = 0
    while success:
        if count % 120 == 0:  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–π 10-–π –∫–∞–¥—Ä
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞–¥—Ä
            font = cv2.FONT_HERSHEY_SIMPLEX
            org = (8, 15)
            fontScale = 0.3
            thickness = 1
            # –°–æ–∑–¥–∞–µ–º –º–∞—Å–∫—É –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º —Ñ–æ–Ω–æ–º
            mask = image.copy()

            # –í—ã–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (–±–µ–ª—ã–π –≤ –≤–∞—à–µ–º —Å–ª—É—á–∞–µ)
            text_bg_color = (111, 190, 248)

            # –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å–∫—É –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–º
            cv2.putText(mask, v_class, org, font, fontScale, text_bg_color, thickness, cv2.LINE_AA)

            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ç–µ–∫—Å—Ç
            alpha = 0.7  # –°—Ç–µ–ø–µ–Ω—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ (0.0 - –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π, 1.0 - –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π)
            image_with_transparent_text = cv2.addWeighted(image, 1 - alpha, mask, alpha, 0)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            random_chars = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(5))
            cv2.imwrite("drafts/" + v_class + "_%d_%s.jpg" % (capt, random_chars), image_with_transparent_text)
            capt += 1
        success, image = vidcap.read()
        count += 1

def save_image_drafts(v_class, file):
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    image = cv2.imread(file)
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    font = cv2.FONT_HERSHEY_SIMPLEX
    org = (8, 15)
    fontScale = 0.3
    thickness = 1
    text_bg_color = (111, 190, 248)
    cv2.putText(image, v_class, org, font, fontScale, text_bg_color, thickness, cv2.LINE_AA)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    random_chars = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(5))
    cv2.imwrite("drafts_test/" + v_class + "_%s.jpg" % random_chars, image)

file_types = {
    'jpg': 'img',
    'jpeg': 'img',
    'png': 'img',
    'mp4': 'vid',
    'avi': 'vid',
    'mkv': 'vid',
}

def get_file_type(file_path):
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    extension = os.path.splitext(file_path)[1][1:].lower()
    # –ò—â–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    file_type = file_types.get(extension, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞')
    return file_type

def parse_directory(directory):
    for root, dirs, files in os.walk(directory):
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏, —É–¥–∞–ª—è—è –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        current_dir_name = os.path.basename(root)
        for file in files:
            full_path = os.path.join(root, file)
            if (get_file_type(full_path) == 'img'):
                print(f"‚ú® Processing üèôÔ∏è  image {current_dir_name} in {full_path}")
                save_image_drafts(current_dir_name,full_path)
            elif (get_file_type(full_path) == 'vid'):
                print(f"‚ú® Processing üìπ  video {current_dir_name} in {full_path}")
                save_video_drafts(current_dir_name,full_path)
            else:
                print(f"‚ö†Ô∏è  The file {full_path} has an unknown format or is damaged!")

parse_directory('preparation')